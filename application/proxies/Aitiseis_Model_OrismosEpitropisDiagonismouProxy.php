<?php

namespace DoctrineProxies;

/**
 * THIS CLASS WAS GENERATED BY THE DOCTRINE ORM. DO NOT EDIT THIS FILE.
 */
class Aitiseis_Model_OrismosEpitropisDiagonismouProxy extends \Aitiseis_Model_OrismosEpitropisDiagonismou implements \Doctrine\ORM\Proxy\Proxy
{
    private $_entityPersister;
    private $_identifier;
    public $__isInitialized__ = false;
    public function __construct($entityPersister, $identifier)
    {
        $this->_entityPersister = $entityPersister;
        $this->_identifier = $identifier;
    }
    /** @private */
    public function __load()
    {
        if (!$this->__isInitialized__ && $this->_entityPersister) {
            $this->__isInitialized__ = true;

            if (method_exists($this, "__wakeup")) {
                // call this after __isInitialized__to avoid infinite recursion
                // but before loading to emulate what ClassMetadata::newInstance()
                // provides.
                $this->__wakeup();
            }

            if ($this->_entityPersister->load($this->_identifier, $this) === null) {
                throw new \Doctrine\ORM\EntityNotFoundException();
            }
            unset($this->_entityPersister, $this->_identifier);
        }
    }

    
    public function get_subproject()
    {
        $this->__load();
        return parent::get_subproject();
    }

    public function set_subproject(\Erga_Model_SubProject $_subproject)
    {
        $this->__load();
        return parent::set_subproject($_subproject);
    }

    public function get_competition()
    {
        $this->__load();
        return parent::get_competition();
    }

    public function set_competition($_competition)
    {
        $this->__load();
        return parent::set_competition($_competition);
    }

    public function get_competitioncommittee()
    {
        $this->__load();
        return parent::get_competitioncommittee();
    }

    public function set_competitioncommittee(\Praktika_Model_Committee_Diagonismou $_competitioncommittee)
    {
        $this->__load();
        return parent::set_competitioncommittee($_competitioncommittee);
    }

    public function get_objectioncommittee()
    {
        $this->__load();
        return parent::get_objectioncommittee();
    }

    public function set_objectioncommittee(\Praktika_Model_Committee_Enstaseon $_objectioncommittee)
    {
        $this->__load();
        return parent::set_objectioncommittee($_objectioncommittee);
    }

    public function onApproval()
    {
        $this->__load();
        return parent::onApproval();
    }

    public function onRejection()
    {
        $this->__load();
        return parent::onRejection();
    }

    public function hasOwnTitle()
    {
        $this->__load();
        return parent::hasOwnTitle();
    }

    public function postUpdate()
    {
        $this->__load();
        return parent::postUpdate();
    }

    public function postPersist()
    {
        $this->__load();
        return parent::postPersist();
    }

    public function getDataFromParent()
    {
        $this->__load();
        return parent::getDataFromParent();
    }

    public function get_aitisiid()
    {
        if ($this->__isInitialized__ === false) {
            return (int) $this->_identifier["_aitisiid"];
        }
        $this->__load();
        return parent::get_aitisiid();
    }

    public function set_aitisiid($_aitisiid)
    {
        $this->__load();
        return parent::set_aitisiid($_aitisiid);
    }

    public function get_aitisiname()
    {
        $this->__load();
        return parent::get_aitisiname();
    }

    public function get_creator()
    {
        $this->__load();
        return parent::get_creator();
    }

    public function set_creator($_creator)
    {
        $this->__load();
        return parent::set_creator($_creator);
    }

    public function get_shorttype()
    {
        $this->__load();
        return parent::get_shorttype();
    }

    public function get_approved()
    {
        $this->__load();
        return parent::get_approved();
    }

    public function set_approved($_approved)
    {
        $this->__load();
        return parent::set_approved($_approved);
    }

    public function get_approvedtext()
    {
        $this->__load();
        return parent::get_approvedtext();
    }

    public function get_session()
    {
        $this->__load();
        return parent::get_session();
    }

    public function set_session(\Synedriaseisee_Model_Synedriasi $_session = NULL)
    {
        $this->__load();
        return parent::set_session($_session);
    }

    public function get_sessionsubject()
    {
        $this->__load();
        return parent::get_sessionsubject();
    }

    public function set_sessionsubject(\Synedriaseisee_Model_AitisiSubject $_sessionsubject = NULL)
    {
        $this->__load();
        return parent::set_sessionsubject($_sessionsubject);
    }

    public function get_creationdate()
    {
        $this->__load();
        return parent::get_creationdate();
    }

    public function set_creationdate($_creationdate)
    {
        $this->__load();
        return parent::set_creationdate($_creationdate);
    }

    public function get_lastupdatedate()
    {
        $this->__load();
        return parent::get_lastupdatedate();
    }

    public function get_parentaitisi()
    {
        $this->__load();
        return parent::get_parentaitisi();
    }

    public function set_parentaitisi($_parentaitisi)
    {
        $this->__load();
        return parent::set_parentaitisi($_parentaitisi);
    }

    public function get_project()
    {
        $this->__load();
        return parent::get_project();
    }

    public function set_project(\Erga_Model_Project $_project = NULL, $recursive = true)
    {
        $this->__load();
        return parent::set_project($_project, $recursive);
    }

    public function get_title()
    {
        $this->__load();
        return parent::get_title();
    }

    public function set_title($_title)
    {
        $this->__load();
        return parent::set_title($_title);
    }

    public function get_titleen()
    {
        $this->__load();
        return parent::get_titleen();
    }

    public function set_titleen($_titleen)
    {
        $this->__load();
        return parent::set_titleen($_titleen);
    }

    public function get_childrenaitiseis()
    {
        $this->__load();
        return parent::get_childrenaitiseis();
    }

    public function set_childrenaitiseis($_childrenaitiseis)
    {
        $this->__load();
        return parent::set_childrenaitiseis($_childrenaitiseis);
    }

    public function get_subjects()
    {
        $this->__load();
        return parent::get_subjects();
    }

    public function set_subjects($_subjects)
    {
        $this->__load();
        return parent::set_subjects($_subjects);
    }

    public function exportToProject()
    {
        $this->__load();
        return parent::exportToProject();
    }

    public function setOptions(array $options, $ignoreisvisible = false)
    {
        $this->__load();
        return parent::setOptions($options, $ignoreisvisible);
    }

    public function getLastScheduled()
    {
        $this->__load();
        return parent::getLastScheduled();
    }

    public function getNextScheduled()
    {
        $this->__load();
        return parent::getNextScheduled();
    }

    public function __toString()
    {
        $this->__load();
        return parent::__toString();
    }

    public function isDeletable()
    {
        $this->__load();
        return parent::isDeletable();
    }

    public function getAvailableActions()
    {
        $this->__load();
        return parent::getAvailableActions();
    }

    public function save()
    {
        $this->__load();
        return parent::save();
    }

    public function get_id()
    {
        $this->__load();
        return parent::get_id();
    }

    public function __set($name, $value)
    {
        $this->__load();
        return parent::__set($name, $value);
    }

    public function __get($name)
    {
        $this->__load();
        return parent::__get($name);
    }

    public function get__classname()
    {
        $this->__load();
        return parent::get__classname();
    }

    public function set__classname($__classname)
    {
        $this->__load();
        return parent::set__classname($__classname);
    }

    public function getOptions($onlyDbFields = true, $poptions = array (
))
    {
        $this->__load();
        return parent::getOptions($onlyDbFields, $poptions);
    }

    public function toArray($onlyDbFields = true, $recursive = false, $options = array (
))
    {
        $this->__load();
        return parent::toArray($onlyDbFields, $recursive, $options);
    }

    public function remove()
    {
        $this->__load();
        return parent::remove();
    }

    public function getMetaOptions()
    {
        $this->__load();
        return parent::getMetaOptions();
    }

    public function getOptionsAsStrings($where = 'object', $dbfieldsonly = false, $curObject = NULL, &$variables = array (
), $visited = array (
))
    {
        $this->__load();
        return parent::getOptionsAsStrings($where, $dbfieldsonly, $curObject, $variables, $visited);
    }

    public function modifySubCollection($newcollection, &$oldcollection)
    {
        $this->__load();
        return parent::modifySubCollection($newcollection, $oldcollection);
    }


    public function __sleep()
    {
        return array('__isInitialized__', '_aitisiid', '_creator', '_approved', '_session', '_sessionsubject', '_creationdate', '_lastupdatedate', '_parentaitisi', '_project', '_title', '_titleen', '_childrenaitiseis', '_subjects', '_subproject', '_competition');
    }

    public function __clone()
    {
        if (!$this->__isInitialized__ && $this->_entityPersister) {
            $this->__isInitialized__ = true;
            $class = $this->_entityPersister->getClassMetadata();
            $original = $this->_entityPersister->load($this->_identifier);
            if ($original === null) {
                throw new \Doctrine\ORM\EntityNotFoundException();
            }
            foreach ($class->reflFields AS $field => $reflProperty) {
                $reflProperty->setValue($this, $reflProperty->getValue($original));
            }
            unset($this->_entityPersister, $this->_identifier);
        }
        
    }
}