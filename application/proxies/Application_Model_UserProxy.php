<?php

namespace DoctrineProxies;

/**
 * THIS CLASS WAS GENERATED BY THE DOCTRINE ORM. DO NOT EDIT THIS FILE.
 */
class Application_Model_UserProxy extends \Application_Model_User implements \Doctrine\ORM\Proxy\Proxy
{
    private $_entityPersister;
    private $_identifier;
    public $__isInitialized__ = false;
    public function __construct($entityPersister, $identifier)
    {
        $this->_entityPersister = $entityPersister;
        $this->_identifier = $identifier;
    }
    /** @private */
    public function __load()
    {
        if (!$this->__isInitialized__ && $this->_entityPersister) {
            $this->__isInitialized__ = true;

            if (method_exists($this, "__wakeup")) {
                // call this after __isInitialized__to avoid infinite recursion
                // but before loading to emulate what ClassMetadata::newInstance()
                // provides.
                $this->__wakeup();
            }

            if ($this->_entityPersister->load($this->_identifier, $this) === null) {
                throw new \Doctrine\ORM\EntityNotFoundException();
            }
            unset($this->_entityPersister, $this->_identifier);
        }
    }

    
    public function getOptions($onlyDbFields = true, $poptions = array (
))
    {
        $this->__load();
        return parent::getOptions($onlyDbFields, $poptions);
    }

    public function existsInLDAP()
    {
        $this->__load();
        return parent::existsInLDAP();
    }

    public function loadFromLDAP()
    {
        $this->__load();
        return parent::loadFromLDAP();
    }

    public function hasRole($rolename)
    {
        $this->__load();
        return parent::hasRole($rolename);
    }

    public function getDominantRole()
    {
        $this->__load();
        return parent::getDominantRole();
    }

    public function get_userid()
    {
        if ($this->__isInitialized__ === false) {
            return $this->_identifier["_userid"];
        }
        $this->__load();
        return parent::get_userid();
    }

    public function set_userid($_userid)
    {
        $this->__load();
        return parent::set_userid($_userid);
    }

    public function get_realname()
    {
        $this->__load();
        return parent::get_realname();
    }

    public function get_realnameLowercase()
    {
        $this->__load();
        return parent::get_realnameLowercase();
    }

    public function get_realnameCondensed()
    {
        $this->__load();
        return parent::get_realnameCondensed();
    }

    public function set_realname($_realname)
    {
        $this->__load();
        return parent::set_realname($_realname);
    }

    public function get_capacity()
    {
        $this->__load();
        return parent::get_capacity();
    }

    public function set_capacity($_capacity)
    {
        $this->__load();
        return parent::set_capacity($_capacity);
    }

    public function get_rank()
    {
        $this->__load();
        return parent::get_rank();
    }

    public function set_rank($_rank)
    {
        $this->__load();
        return parent::set_rank($_rank);
    }

    public function get_department()
    {
        $this->__load();
        return parent::get_department();
    }

    public function set_department($_department)
    {
        $this->__load();
        return parent::set_department($_department);
    }

    public function get_departmentname()
    {
        $this->__load();
        return parent::get_departmentname();
    }

    public function get_sector()
    {
        $this->__load();
        return parent::get_sector();
    }

    public function set_sector($_sector)
    {
        $this->__load();
        return parent::set_sector($_sector);
    }

    public function get_phone()
    {
        $this->__load();
        return parent::get_phone();
    }

    public function set_phone($_phone)
    {
        $this->__load();
        return parent::set_phone($_phone);
    }

    public function get_email()
    {
        $this->__load();
        return parent::get_email();
    }

    public function set_email($_email)
    {
        $this->__load();
        return parent::set_email($_email);
    }

    public function get_roles()
    {
        $this->__load();
        return parent::get_roles();
    }

    public function set_roles($_roles)
    {
        $this->__load();
        return parent::set_roles($_roles);
    }

    public function get_token()
    {
        $this->__load();
        return parent::get_token();
    }

    public function get_contracts()
    {
        $this->__load();
        return parent::get_contracts();
    }

    public function get_projectbasicdetails()
    {
        $this->__load();
        return parent::get_projectbasicdetails();
    }

    public function set_projectbasicdetails(\Erga_Model_ProjectBasicDetails $_projectbasicdetails)
    {
        $this->__load();
        return parent::set_projectbasicdetails($_projectbasicdetails);
    }

    public function get_subprojects($status)
    {
        $this->__load();
        return parent::get_subprojects($status);
    }

    public function set_subprojects(\Erga_Model_SubProject $_subprojects)
    {
        $this->__load();
        return parent::set_subprojects($_subprojects);
    }

    public function regenerateToken()
    {
        $this->__load();
        return parent::regenerateToken();
    }

    public function __toString()
    {
        $this->__load();
        return parent::__toString();
    }

    public function __set($name, $value)
    {
        $this->__load();
        return parent::__set($name, $value);
    }

    public function __get($name)
    {
        $this->__load();
        return parent::__get($name);
    }

    public function get__classname()
    {
        $this->__load();
        return parent::get__classname();
    }

    public function set__classname($__classname)
    {
        $this->__load();
        return parent::set__classname($__classname);
    }

    public function setOptions(array $options, $ignoreisvisible = false)
    {
        $this->__load();
        return parent::setOptions($options, $ignoreisvisible);
    }

    public function toArray($onlyDbFields = true, $recursive = false, $options = array (
))
    {
        $this->__load();
        return parent::toArray($onlyDbFields, $recursive, $options);
    }

    public function save()
    {
        $this->__load();
        return parent::save();
    }

    public function remove()
    {
        $this->__load();
        return parent::remove();
    }

    public function getMetaOptions()
    {
        $this->__load();
        return parent::getMetaOptions();
    }

    public function getOptionsAsStrings($where = 'object', $dbfieldsonly = false, $curObject = NULL, &$variables = array (
), $visited = array (
))
    {
        $this->__load();
        return parent::getOptionsAsStrings($where, $dbfieldsonly, $curObject, $variables, $visited);
    }

    public function modifySubCollection($newcollection, &$oldcollection)
    {
        $this->__load();
        return parent::modifySubCollection($newcollection, $oldcollection);
    }


    public function __sleep()
    {
        return array('__isInitialized__', '_userid', '_realname', '_rank', '_sector', '_phone', '_token', '_subprojects');
    }

    public function __clone()
    {
        if (!$this->__isInitialized__ && $this->_entityPersister) {
            $this->__isInitialized__ = true;
            $class = $this->_entityPersister->getClassMetadata();
            $original = $this->_entityPersister->load($this->_identifier);
            if ($original === null) {
                throw new \Doctrine\ORM\EntityNotFoundException();
            }
            foreach ($class->reflFields AS $field => $reflProperty) {
                $reflProperty->setValue($this, $reflProperty->getValue($original));
            }
            unset($this->_entityPersister, $this->_identifier);
        }
        
    }
}